# Alerting
#
# Define sets of strings which, if match, trigger an action (send email or write to DB)
#

# Regexs to match on
# Note that '\' chars must be double escaped
# syntax is perl compatible
alertRe   = "@example\\.com|@sub\\.example\\.com"

#### Email

# Should we send email alerts?
# If this is set to false, all other email params can be set to ""
alertToEmail     = true

# Domain that we will send email from
domain         = "example.com"

# Send email as?
# This must be a bare email address
sender          = "do-not-reply@example.com"

# Send email to?
# This must be a list of bare email addresses
recipients     = ["me@example.com"]

# Send email using which SMTP server?
# Must be un-authenticated
smtpServer     = "smtp.example.com"

#### Database

# Log pastes that we alert on to the DB?
alertToDB       = false
# Log all pastes to the DB?
# Note that if this is set, alertToDB is set to true as well
logAllToDB      = false

# host for MongoDB master
dbHost         = "localhost"

# DB name
dbName         = "pastewatch"

### Debug logging
# Level is one of "debug", "info" or "error"
logLevel       = "info"
# Log to "syslog", "stderr" or "both"?
logTo          = "stderr"

### Other stuff that can probably be left alone

# Number of Haskell (lightweight) worker theads to spawn
# OS level threads are controlled by runtime options e.g.
# +RTS -N2 -RTS
# for two theads
# Total num threads = nthreads + two per site + 2
nthreads       = 32

# When getting a paste, pause for a period of up to
# pauseMax seconds to avoid "thundering herd" type
# issues
pauseMax       = 5
